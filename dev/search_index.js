var documenterSearchIndex = {"docs":
[{"location":"gas_objects/#Gas-Objects","page":"Gas Objects","title":"Gas Objects","text":"","category":"section"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"Gas objects are high-level representations of greenhouse gases that allow fast and continuous retrieval of absorption cross-sections over a range of temperatures and pressures.","category":"page"},{"location":"gas_objects/#Creating-Gases","page":"Gas Objects","title":"Creating Gases","text":"","category":"section"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"Before creating a gas object, you must be sure to start your Julia session with all available threads on your system. For example, if your computer has 8 threads available, use","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"julia --threads 8","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"then you can define the","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"vector of wavenumbers\ntemperature and pressure ranges (AtmospericDomain)","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"over which its absorption cross-sections will be defined. For example,","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"using ClearSky\nν = LinRange(1, 2500, 2500);\nΩ = AtmospericDomain((100,350), 12, (1,1e5), 24);","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"defines 2500 evenly spaced wavenumber samples over the longwave window and an atmospheric domain between 100-350 K and 1-1e5 Pa. The numbers 12 and 24 define the number of interpolation nodes along the temperature and pressure axes, respectively.","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"Now you can create a gas object directly from a par file containing the spectral line data from HITRAN. For example, to load carbon dioxide from the file \"CO2.par\" and assign a well-mixed concentration of 400 ppm,","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"co2 = WellMixedGas(\"CO2.par\", 400e-6, ν, Ω)","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"In the background, ClearSky","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"reads line data\ncomputes absorption cross-sections for each wavenumber, temperature, and pressure point defined by ν and Ω (using the voigt! profile by default)\ngenerates high-accuracy interpolation functions for the temperature-pressure grid at each wavenumber\nstores concentration information","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"Consequently, loading gases will take some time. It will be faster more threads (of course) and with fewer wavenumber, temperature, and pressure points.","category":"page"},{"location":"gas_objects/#Retrieving-Cross-Sections","page":"Gas Objects","title":"Retrieving Cross-Sections","text":"","category":"section"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"Gases are function-like objects. They can be used like functions to retrieve concentration-scaled cross-sections at any temperature and pressure withing the atmospheric domain. For example, computing cross-sections at a specific temperature and pressure, 250 K and 10000 Pa for example, is as simple as","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"co2(250, 1e4)","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"This will return a vector of cross-sections values at each wavenumber point the gas was created with (units of cm^2/molecule). In this case, you'll get cross-sections for 2500 evenly spaced wavenumbers between 1 and 2500 cm^-1.","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"If you only need a cross-section for one of the specific wavenumber points in the gas, you must pass the index of that wavenumber before the temperature and pressure. For example, to get the cross-section corresponding to ν[600],","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"co2(600, 250, 1e4)","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"","category":"page"},{"location":"gas_objects/","page":"Gas Objects","title":"Gas Objects","text":"AtmosphericDomain\nOpacityTable\nWellMixedGas\nVariableGas","category":"page"},{"location":"gas_objects/#ClearSky.AtmosphericDomain","page":"Gas Objects","title":"ClearSky.AtmosphericDomain","text":"Structure defining the temperature and pressure ranges over which absorption cross-sections are generated when constructing gas objects. AtmosphericDomain objects store the temperature and pressure coordinates of cross-section interpolation grids. More points lead to higher accuracy interpolation. Generally, about 12 temperature points and 24 pressure points results in maximum error of ~1 % and much smaller average error.\n\nField Type Description\nT Vector{Float64} temperature coordinates of grid [K]\nTmin Float64 lowest temperature value\nTmax Float64 highest temperature value\nnT Int64 number of temperature coordinates\nP Vector{Float64} pressure coordinates of grid [Pa]\nPmin Float64 lowest pressure value\nPmax Float64 highest pressure value\nnP Int64 number of pressure coordinates\n\nConstructors\n\nAtmosphericDomain(Trange, nT, Prange, nP)\n\nCreates a domain with the given temperature/pressure ranges and numbers of points. Trange and Prange should be tuples of two values. nT and nP indicate the number of points to use.\n\nAtmosphericDomain()\n\nFor convenience, creates a domain with 12 temperature points in [25, 550] K and 24 pressure points in [1,1e6] Pa.\n\n\n\n\n\n","category":"type"},{"location":"gas_objects/#ClearSky.OpacityTable","page":"Gas Objects","title":"ClearSky.OpacityTable","text":"An OpacityTable is a simple object wrapping a BichebyshevInterpolator. Inside, the interpolator stores a grid of log cross-section values along log pressure coordinates and temperature coordinates. An OpacityTable behaves like a function, recieving a temperature and pressure. When called, it retrieves a cross-section from the interpolator, undoes the log, and returns it. When constructing a gas object, each wavenumber is allocated a unique OpacityTable for fast and accurate cross-section evaluation at any temperature and pressure inside the AtmosphericDomain. Generally, OpacityTable objects should be used indirectly through gas objects.\n\n\n\n\n\n","category":"type"},{"location":"absorption_data/#Absorption-Data","page":"Absorption Data","title":"Absorption Data","text":"","category":"section"},{"location":"absorption_data/#Spectral-Lines","page":"Absorption Data","title":"Spectral Lines","text":"","category":"section"},{"location":"absorption_data/","page":"Absorption Data","title":"Absorption Data","text":"The model is designed to use the HITRAN database of spectral line data for various atmospheric gases. To download line data, you must register for a free account then search for lines. It is generally best to download all lines for a single gas into a single file, which will have a .par extension. These are text files in fixed-width format and they can be read by functions in ClearSky.","category":"page"},{"location":"absorption_data/","page":"Absorption Data","title":"Absorption Data","text":"To work with spectral line data directly, use the readpar function to load the data. This function simply parses the fixed-width file into a dictionary of vectors with the appropriate data types. For more information, see the readpar documentation.","category":"page"},{"location":"absorption_data/","page":"Absorption Data","title":"Absorption Data","text":"If you plan to compute line shapes directly, read par files into SpectralLines objects. The constructor reads files using readpar then rearranges it for line shape calculations. Unnecessary information is dropped and the molecule name, formula, and molar masses are assigned. To compute line shapes, see Computing Line Shapes.","category":"page"},{"location":"absorption_data/","page":"Absorption Data","title":"Absorption Data","text":"For only high-level calculations, par files can be loaded directly into gas objects, as described [[]]","category":"page"},{"location":"absorption_data/#Collision-Induced-Absorption-(CIA)","page":"Absorption Data","title":"Collision Induced Absorption (CIA)","text":"","category":"section"},{"location":"absorption_data/","page":"Absorption Data","title":"Absorption Data","text":"The model also makes it easy to include CIA data from HITRAN. These files can be  downloaded directly or all at once using the download_cia.py script. Each file contains potentially many tables of absorption data at different wavenumbers and temperatures.","category":"page"},{"location":"absorption_data/","page":"Absorption Data","title":"Absorption Data","text":"Like the line data, there is a function for reading these CIA files without doing anything else. The readcia function reads a cia file into a vector of dictionaries. Each dictionary represents a table of absorption data. This is the raw data, but it is relatively hard to work with.","category":"page"},{"location":"absorption_data/","page":"Absorption Data","title":"Absorption Data","text":"A CIATables object arranges each table of absorption data into an interpolator and makes it easy to compute the CIA absorption coefficient at any wavenumber and temperature. Also, in combination with the cia function, a CIATables can be used to compute absorption cross-sections from provided wavenumber, temperature, and partial pressures.","category":"page"},{"location":"absorption_data/","page":"Absorption Data","title":"Absorption Data","text":"","category":"page"},{"location":"absorption_data/","page":"Absorption Data","title":"Absorption Data","text":"readpar\nSpectralLines\nreadcia\nCIATables","category":"page"},{"location":"absorption_data/#ClearSky.readpar","page":"Absorption Data","title":"ClearSky.readpar","text":"readpar(filename; νmin=0, νmax=Inf, Scut=0, I=[], maxlines=-1)\n\nRead an absoption line file from the HITRAN database, which should have the \".par\" extension. These files are available at https://hitran.org/lbl after registering for a free account.\n\nKeyword Arguments\n\nνmin: smallest line wavenumber to include\nνmax: largest line wavenumber to include\nScut: smallest spectral line intensity\nI: array of isotopologue numbers to include (excludes all others)\nmaxlines: maximum number of lines to include (includes only the most intense maxlines lines)\n\nA dictionary of vectors is returned, reflecting the definitions from\n\nHITRAN website\nRothman, Laurence S., et al. \"The HITRAN 2004 molecular spectroscopic database.\" Journal of quantitative spectroscopy and radiative transfer 96.2 (2005): 139-204.\n\nKey Vector Type Description\nM Int16 HITRAN molecular identification number\nI Char HITRAN isotopologue identification symbol\nν Float64 spectral line wavenumber [cm^-1] in a vacuum\nS Float64 spectral line intensity [cm^-1/(moleculecdotcm^-2)] at 296 K\nA Float64 Einstein-A coefficient (s^-1) of a transition\nγa Float64 air-broadened half width at half maximum (HWHM) [cm^-1/atm] at 296 K and 1 atm\nγs Float64 self-broadened half width at half maximum (HWHM) [cm^-1/atm] at 296 K and 1 atm\nEpp Float64 lower-state energy of the transition [cm^-1]\nna Float64 coefficient of temperature dependence of air-broadened half width\nδa Float64 pressure shift [cm^-1/atm] at 296 K and 1 atm of the line position with respect to vacuum transition wavenumber\nVp String upper-state \"global\" quanta\nVpp String lower-state \"global\" quanta\nQp String upper-state \"local\" quanta\nQpp String lower-state \"local\" quanta\nIerr String uncertainty indices\nIref String reference indices\n* Char flag (?)\ngp String statistical weight of upper state\ngpp String statistical weight of lower state\n\n\n\n\n\n","category":"function"},{"location":"absorption_data/#ClearSky.SpectralLines","page":"Absorption Data","title":"ClearSky.SpectralLines","text":"Organizing type for spectral line data of a single gas\n\nField Type Description\nname String gas name\nformula String gas formula\nN Int64 number of lines\nM Int16 see readpar\nI Vector{Int16} see readpar\nμ Vector{Float64} molar mass of isotopologues [kg/mole]\nA Vector{Float64} isotopologue abundance (Earth)\nν Vector{Float64} see readpar\nS Vector{Float64} see readpar\nγa Vector{Float64} see readpar\nγs Vector{Float64} see readpar\nEpp Vector{Float64} see readpar\nna Vector{Float64} see readpar\n\nConstructors\n\nSpectralLines(par::Dict)\n\nConstruct a SpectralLines object from a dictionary of line data. That dictionary can be created with readpar.\n\nSpectralLines(filename, νmin=0, νmax=Inf, Scut=0, I=[], maxlines=-1)\n\nRead a .par file directly into a SpectralLines object. Keyword arguments are passed through to readpar.\n\n\n\n\n\n","category":"type"},{"location":"absorption_data/#ClearSky.readcia","page":"Absorption Data","title":"ClearSky.readcia","text":"readcia(filename)\n\nRead a collision induced absorption data file. These files are available from HITRAN and desribed by this readme. A vector of dictionaries is returned. Each dictionary represents absorption coefficients for a single temperature over a range of wavenumbers. Each dictionary contains:\n\nKey Type Description\nsymbol String chemical symbol\nνmin Float64 minimum wavenumber of absorption range [cm^-1]\nνmax Float64 maximum wavenumber of absorption range [cm^-1]\nnpts Int64 number of points\nT Float64 temperature for absorption data [K]\nν Vector{Float64} wavenumber samples [cm^-1]\nk Vector{Float64} absorption coefficients [cm^5/molecule^2]\nmaxcia Float64 maximum absorption coefficient [cm^5/molecule^2]\nres Float64 ?\ncomments String miscelleneous comments\nreference Int64 indices of data references\n\n\n\n\n\n","category":"function"},{"location":"absorption_data/#ClearSky.CIATables","page":"Absorption Data","title":"ClearSky.CIATables","text":"Organizing type for collision induced absorption data, with data tables loaded into interpolators.\n\nField Type Description\nname String molecular symbol, i.e. \"CO2-H2\"\nformulae Tuple{String,String} split molecular formulae, i.e (\"CO2\", \"H2\")\nΦ Vector{BilinearInterpolator} interpolators for each grid of absorption coefficients\nϕ Vector{LinearInterpolator} interpolators for isolated ranges of absorption coefficients\nT Vector{Float64} temperatures [K] for single ranges in ϕ\nextrapolate Bool whether to extrapolate using flat boundaries from the coefficient grids in Φ\nsingles Bool whether to use the single ranges in ϕ at all\n\nThe interpolator objects are described in the BasicInterpolators.jl documentation.\n\nConstructors\n\nCIATables(cia::Vector{Dict}; extrapolate=false, singles=false, verbose=true)\n\nConstruct a CIATables object from a dictionary of coefficient data, which can be read from files using readcia. Keywords extrapolate and singles are used to set those fields of the returned object.\n\nCIATables(filename; extrapolate=false, singles=false, verbose=true)\n\nConstruct a CIATables object directly from file, using readcia along the way.\n\nExamples\n\nA CIATables object is function-like. To retrieve the absorption coefficient at a given wavenumber [cm^-1] and temperature [K], use the object like a function.\n\nco2co2 = CIATables(\"data/cia/CO2-CO2_2018.cia\"); #read data\nν = 100; #wavenumber [cm^-1]\nT = 288; #temperature [K]\nk = co2co2(ν, T) #absorption coefficient [cm^5/molecule^2]\n\nThe object interpolates and sums all data tables that contain ν and T. If extrapolate is true, boundary values are included whenever the temperature is out of range. If singles is true, data ranges for a single temperature are included whenever they contain ν.\n\nA CIATables can be passed to the cia function to compute an absorption cross-section with different temperatures and pressures.\n\nco2ch4 = CIATables(\"data/cia/CO2-CH4_2018.cia\"); #read data\nν = 250; #wavenumber [cm^-1]\nT = 310 #temperature [K]\nPair = 1e5; #air pressure [Pa]\nPco2 = 40; #CO2 partial pressure [Pa]\nPch4 = 0.1; #CH4 partial pressure [Pa]\nσ = cia(ν, co2ch4, T, Pair, Pco2, Pch4) #absorption cross-section [cm^2/molecule]\n\n\n\n\n\n","category":"type"},{"location":"#ClearSky","page":"Home","title":"ClearSky","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation for ClearSky, a line-by-line radiative transfer model written entirely in Julia. The code is designed to make one-dimensional, clear-sky calculations easy, interactive, and fast.","category":"page"},{"location":"#Details","page":"Home","title":"Details","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Reading Absorption Data\nComputing Line Shapes\nGas Objects","category":"page"},{"location":"line_shapes/#Line-Shapes","page":"Line Shapes","title":"Line Shapes","text":"","category":"section"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"Line shapes are computed following the definitions and equations in HITRAN (and elsewhere).","category":"page"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"In ClearSky, line shapes can be computed from SpectralLines objects and built in shape functions. The following shape functions are implemented:","category":"page"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"voigt\nlorentz, pressure-broadening\ndoppler\nPHCO2, the Perrin & Hartman sublorentzian shape for carbon dioxide","category":"page"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"Each of these functions has three versions/methods for computing cross-sections:","category":"page"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"at a single wavenumber\nwith vectors of wavenumbers\nin-place with vectors of wavenumbers","category":"page"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"The methods for vectors of wavenumbers are optimized for that scenario and will generally be much faster than simply broadcasting the single-wavenumber method.","category":"page"},{"location":"line_shapes/#A-Note-on-Handling-TIPS","page":"Line Shapes","title":"A Note on Handling TIPS","text":"","category":"section"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"Evaluating line shapes requires evaluating the temperature dependence of line intensities. To compute this scaling, the ratio of total internal partition functions (TIPS),","category":"page"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"Q(T_ref)Q(T)","category":"page"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"must be evaluated. The necessary information is provided by HITRAN for every isotopologue and computing the ratio requires interpolating a range of Q(T) values for the appropriate temperature.","category":"page"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"ClearSky does this automatically. The molparam.py script downloads Q data for each isotopologue, generates high-accuracy interpolating Chebyshev polynomials for each one, and writes an array with the information to a file in Julia syntax called molparam.jl. These pre-computed interpolating coefficients are used directly as source code in the model, allowing rapid and accurate evaluation of the TIPS ratio. The interpolating functions are guaranteed to reproduce the provided data with less than 1 % error between 25 and 1000 K.","category":"page"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"","category":"page"},{"location":"line_shapes/#Voigt-Profile","page":"Line Shapes","title":"Voigt Profile","text":"","category":"section"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"fvoigt\nvoigt\nvoigt!","category":"page"},{"location":"line_shapes/#ClearSky.fvoigt","page":"Line Shapes","title":"ClearSky.fvoigt","text":"fvoigt(ν, νl, α, γ)\n\nEvaluate Voigt profile\n\nArguments\n\nν: profile evaluation wavenumber [cm^-1]\nνl: wavenumber of absorption line [cm^-1]\nα: doppler (gaussian) broadening coefficient\nγ: lorentzian broadening coefficient\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.voigt","page":"Line Shapes","title":"ClearSky.voigt","text":"voigt(ν, νl, S, α, γ)\n\nEvaluate Voigt absoption cross-section [cm^2/molecule]\n\nArguments\n\nν: profile evaluation wavenumber [cm^-1]\nνl: wavenumber of absorption line [cm^-1]\nS: line absoption intensity [cm^-1/(moleculecdotcm^-2)]\nα: doppler (gaussian) broadening coefficient\nγ: lorentzian broadening coefficient\n\n\n\n\n\nvoigt(ν, sl::SpectralLines, T, P, Pₚ, Δνcut=25)\n\nEvaluate Voigt absorption cross-section at a single wavenumber.\n\n\n\n\n\nvoigt(ν, sl, T, P, Pₚ, Δνcut=25)\n\nCompute a vector of Voigt absorption cross-sections [cm^2/molecule] from a SpectralLines object. Temperature scaling and Voigt profiles are evaluated along the way.\n\nArguments\n\nν: vector of wavenumbers indicating where to evaluate [cm^-1]\nsl: SpectralLines\nT: temperature [K]\nP: air pressure [Pa]\nPₚ: partial pressure [Pa]\nΔνcut: profile truncation distance [cm^-1]\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.voigt!","page":"Line Shapes","title":"ClearSky.voigt!","text":"voigt!(σ, ν, sl, T, P, Pₚ, Δνcut=25)\n\nIdentical to voigt, but fills the vector of cross-sections (σ) in-place.\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"","category":"page"},{"location":"line_shapes/#Lorentz-Profile","page":"Line Shapes","title":"Lorentz Profile","text":"","category":"section"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"γlorentz\nflorentz\nlorentz\nlorentz!","category":"page"},{"location":"line_shapes/#ClearSky.γlorentz","page":"Line Shapes","title":"ClearSky.γlorentz","text":"γlorentz(γa, γs, na, T, P, Pₚ)\n\nCompute lorentzian broadening coefficient\n\nArguments\n\nγa: air-broadened half width at half maximum (HWHM) [cm^-1/atm] at 296 K and 1 atm\nγs: self-broadened half width at half maximum (HWHM) [cm^-1/atm] at 296 K and 1 atm\nna: coefficient of temperature dependence of air-broadened half width\nT: temperature [K]\nP: air pressure [Pa]\nPₚ: partial pressure [Pa]\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.florentz","page":"Line Shapes","title":"ClearSky.florentz","text":"florentz(ν, νl, γ)\n\nEvaluate lorentz profile\n\nArguments\n\nν: profile evaluation wavenumber [cm^-1]\nνl: wavenumber of absorption line [cm^-1]\nγ: lorentzian broadening coefficient\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.lorentz","page":"Line Shapes","title":"ClearSky.lorentz","text":"lorentz(ν, νl, S, γ)\n\nEvaluate lorentzian absoption cross-section [cm^2/molecule]\n\nArguments\n\nν: profile evaluation wavenumber [cm^-1]\nνl: wavenumber of absorption line [cm^-1]\nS: line absoption intensity [cm^-1/(moleculecdotcm^-2)]\nγ: lorentzian broadening coefficient\n\n\n\n\n\nlorentz(ν, sl, T, P, Pₚ, Δνcut=25)\n\nCompute a single lorentzian absorption cross-sections [cm^2/molecule] from a SpectralLines object. Temperature scaling and lorentzian profiles are evaluated along the way.\n\nArguments\n\nν: single wavenumber indicating where to evaluate [cm^-1]\nsl: SpectralLines\nT: temperature [K]\nP: air pressure [Pa]\nPₚ: partial pressure [Pa]\nΔνcut: profile truncation distance [cm^-1]\n\n\n\n\n\nlorentz(ν, sl, T, P, Pₚ, Δνcut=25)\n\nCompute a vector of lorentzian absorption cross-sections [cm^2/molecule] from a SpectralLines object. Temperature scaling and lorentzian profiles are evaluated along the way.\n\nArguments\n\nν: vector of wavenumbers indicating where to evaluate [cm^-1]\nsl: SpectralLines\nT: temperature [K]\nP: air pressure [Pa]\nPₚ: partial pressure [Pa]\nΔνcut: profile truncation distance [cm^-1]\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.lorentz!","page":"Line Shapes","title":"ClearSky.lorentz!","text":"lorentz!(σ, ν, sl, T, P, Pₚ, Δνcut=25)\n\nIdentical to lorentz, fills the vector of cross-sections (σ) in-place.\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"","category":"page"},{"location":"line_shapes/#Doppler-Profile","page":"Line Shapes","title":"Doppler Profile","text":"","category":"section"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"αdoppler\nfdoppler\ndoppler\ndoppler!","category":"page"},{"location":"line_shapes/#ClearSky.αdoppler","page":"Line Shapes","title":"ClearSky.αdoppler","text":"αdoppler(νl, μ, T)\n\nCompute doppler (gaussian) broadening coefficient from line wavenumber νl [cm^-1], gas molar mass μ [kg/mole], and temperature T [K].\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.fdoppler","page":"Line Shapes","title":"ClearSky.fdoppler","text":"fdoppler(ν, νl, α)\n\nEvaluate doppler (gaussian) profile\n\nArguments\n\nν: profile evaluation wavenumber [cm^-1]\nνl: wavenumber of absorption line [cm^-1]\nα: doppler (gaussian) broadening coefficient\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.doppler","page":"Line Shapes","title":"ClearSky.doppler","text":"doppler(ν, νl, S, α)\n\nEvaluate doppler (gaussian) absoption cross-section [cm^2/molecule]\n\nArguments\n\nν: profile evaluation wavenumber [cm^-1]\nνl: wavenumber of absorption line [cm^-1]\nS: line absoption intensity [cm^-1/(moleculecdotcm^-2)]\nα: doppler (gaussian) broadening coefficient\n\n\n\n\n\ndoppler(ν, sl, T, P, Pₚ, Δνcut=25)\n\nEvaluate a single doppler (gaussian) absoption cross-section [cm^2/molecule]. Temperature scaling and doppler profiles are evaluated along the way.\n\nArguments\n\nν: wavenumber indicating where to evaluate [cm^-1]\nsl: SpectralLines\nT: temperature [K]\nP: air pressure [Pa]\nPₚ: partial pressure [Pa]\nΔνcut: profile truncation distance [cm^-1]\n\n\n\n\n\ndoppler(ν, sl, T, P, Pₚ, Δνcut=25)\n\nCompute a vector of doppler (gaussian) absorption cross-sections [cm^2/molecule] from a SpectralLines object. Temperature scaling and doppler profiles are evaluated along the way.\n\nArguments\n\nν: vector of wavenumbers indicating where to evaluate [cm^-1]\nsl: SpectralLines\nT: temperature [K]\nP: air pressure [Pa]\nPₚ: partial pressure [Pa]\nΔνcut: profile truncation distance [cm^-1]\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.doppler!","page":"Line Shapes","title":"ClearSky.doppler!","text":"doppler!(σ, ν, sl, T, P, Pₚ, Δνcut=25)\n\nIdentical to doppler, but fills the vector of cross-sections (σ) in-place.\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"","category":"page"},{"location":"line_shapes/#Perrin-and-Hartman-Sublorentzian-CO2-Profile","page":"Line Shapes","title":"Perrin & Hartman Sublorentzian CO2 Profile","text":"","category":"section"},{"location":"line_shapes/","page":"Line Shapes","title":"Line Shapes","text":"ΧPHCO2\nPHCO2\nPHCO2!","category":"page"},{"location":"line_shapes/#ClearSky.ΧPHCO2","page":"Line Shapes","title":"ClearSky.ΧPHCO2","text":"ΧPHCO2(ν, νl, T)\n\nCompute the Χ (Chi) factor for sub-lorentzian CO2 line profiles, as in\n\nPerrin, M. Y., and J. M. Hartman. “Temperature-Dependent Measurements and Modeling of Absorption by CO2-N2 Mixtures in the Far Line-Wings of the 4.3 Μm CO2 Band.” Journal of Quantitative Spectroscopy and Radiative Transfer, vol. 42, no. 4, 1989, pp. 311–17.\n\nArguments\n\nν: profile evaluation wavenumber [cm^-1]\nνl: wavenumber of absorption line [cm^-1]\nT: temperature [K]\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.PHCO2","page":"Line Shapes","title":"ClearSky.PHCO2","text":"PHCO2(ν, νl, S, α)\n\nEvaluate Perrin & Hartman sub-lorentzian absoption cross-section [cm^2/molecule] for CO2\n\nArguments\n\nν: profile evaluation wavenumber [cm^-1]\nνl: wavenumber of absorption line [cm^-1]\nT: temperature [K]\nS: line absoption intensity [cm^-1/(moleculecdotcm^-2)]\nα: doppler (gaussian) broadening coefficient\nγ: lorentzian broadening coefficient\n\n\n\n\n\nPHCO2(ν, sl, T, P, Pₚ, Δνcut=500)\n\nCompute a single Perrin & Hartman sub-lorentzian CO2 absorption cross-sections [cm^2/molecule] from a SpectralLines object. Temperature scaling and profiles are evaluated along the way.\n\nArguments\n\nν: single wavenumber indicating where to evaluate [cm^-1]\nsl: SpectralLines\nT: temperature [K]\nP: air pressure [Pa]\nPₚ: partial pressure [Pa]\nΔνcut: profile truncation distance [cm^-1]\n\n\n\n\n\nPHCO2(ν, sl, T, P, Pₚ, Δνcut=500)\n\nCompute a vector of Perrin & Hartman sub-lorentzian CO2 absorption cross-sections [cm^2/molecule] from a SpectralLines object. Temperature scaling and profiles are evaluated along the way.\n\nArguments\n\nν: vector of wavenumbers indicating where to evaluate [cm^-1]\nsl: SpectralLines\nT: temperature [K]\nP: air pressure [Pa]\nPₚ: partial pressure [Pa]\nΔνcut: profile truncation distance [cm^-1]\n\n\n\n\n\n","category":"function"},{"location":"line_shapes/#ClearSky.PHCO2!","page":"Line Shapes","title":"ClearSky.PHCO2!","text":"PHCO2!(σ, ν, sl, T, P, Pₚ, Δνcut=500)\n\nIdentical to PHCO2, but fills the vector of cross-sections (σ) in-place.\n\n\n\n\n\n","category":"function"}]
}
